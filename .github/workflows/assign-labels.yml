name: assign-labels

on:
  workflow_run:
    workflows: [ "validate-atomics" ]
    types:
      - completed

jobs:
  assign-labels:
    runs-on: ubuntu-latest
    steps:
      - name: download-artifact
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr_number"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr_number.zip`, Buffer.from(download.data));

      - name: unzip-artifact
        run: unzip pr_number.zip

      - name: get_pr_number
        uses: actions/github-script@v6
        with:
          script: |
            let fs = require('fs');
            return Number(fs.readFileSync('./pr_number'));
          result-encoding: string
      - name: checkout repo
        uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - name: setup python3.11
        uses: actions/setup-python@v4
        id: setup-python
        with:
          python-version: "3.11.2"
          cache: "poetry"
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: assign labels and reviewers
        run: |
          poetry run python bin/runner/runner.py -pr '${{steps.get_pr_number.outputs.result}}' -t  ${{ secrets.GITHUB_TOKEN }}
